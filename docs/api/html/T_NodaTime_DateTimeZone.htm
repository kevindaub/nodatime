<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>DateTimeZone Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_NodaTime_DateTimeZone" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:NodaTime.DateTimeZone" /><MSHelp:Keyword Index="A" Term="T:NodaTime.DateTimeZone" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeDateTimeZoneClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfNodaTimeDateTimeZoneMembersTopic" /><MSHelp:Keyword Index="K" Term="DateTimeZone class" /><MSHelp:Keyword Index="K" Term="NodaTime.DateTimeZone class" /><MSHelp:Keyword Index="F" Term="DateTimeZone" /><MSHelp:Keyword Index="F" Term="NodaTime.DateTimeZone" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="NodaTime.dll" /><MSHelp:Attr Name="APIName" Value="NodaTime.DateTimeZone" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Represents a time zone - a mapping between UTC and local time. A time zone maps UTC instants to local instants - or, equivalently, to the offset from UTC at any particular instant." /></xml></head><body><div id="control"><span class="productTitle">Noda-Time</span><br /><span class="topicTitle">DateTimeZone Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project.htm">Namespaces</a> ► <a href="N_NodaTime.htm">NodaTime</a> ► <span class="selflink">DateTimeZone</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p></span><div class="summary">
            Represents a time zone - a mapping between UTC and local time. A time zone maps UTC instants to local instants
             - or, equivalently, to the offset from UTC at any particular instant.
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">DateTimeZone</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">DateTimeZone</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">DateTimeZone</span> <span class="keyword">abstract</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><div id="allMembersSection"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td><td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td><td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td><td class="tab" value="field" onclick="toggleClass('memberTabs','value','field','activeTab','tab'); processSubgroup('field','member'); processList('memberList','filterElement','member');">Fields</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_AtLeniently.htm">AtLeniently(LocalDateTime)</a></td><td><div class="summary">
            Maps the given <a href="T_NodaTime_LocalDateTime.htm">LocalDateTime</a> to the corresponding <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a> in a lenient
            manner: ambiguous values map to the later of the alternatives, and "skipped" values map to the start of the
            zone interval after the "gap".
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_AtStartOfDay.htm">AtStartOfDay(LocalDate)</a></td><td><div class="summary">
            Returns the earliest valid <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a> with the given local date.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_AtStrictly.htm">AtStrictly(LocalDateTime)</a></td><td><div class="summary">
            Maps the given <a href="T_NodaTime_LocalDateTime.htm">LocalDateTime</a> to the corresponding <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a>, if and only if
            that mapping is unambiguous in this time zone.  Otherwise, <a href="T_NodaTime_SkippedTimeException.htm">SkippedTimeException</a> or
            <a href="T_NodaTime_AmbiguousTimeException.htm">AmbiguousTimeException</a> is thrown, depending on whether the mapping is ambiguous or the local
            date/time is skipped entirely.
            </div><br /></td></tr><tr data="field; public; static; declared"><td><img src="../icons/pubfield.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="F_NodaTime_DateTimeZone_DefaultDateTimeZoneProvider.htm">DefaultDateTimeZoneProvider</a></td><td><div class="summary">
            Gets the default time zone provider, which is initialized from resources within the NodaTime assembly.
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_DateTimeZone_ForId.htm">ForId(String)</a></td><td><div class="summary">
            Returns the time zone with the given ID. This must be one of the IDs returned by <a href="P_NodaTime_DateTimeZone_Ids.htm">Ids</a>, or an ID
            returned by a fixed time zone as returned by <a href="M_NodaTime_DateTimeZone_ForOffset.htm">ForOffset(Offset)</a>.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_DateTimeZone_ForOffset.htm">ForOffset(Offset)</a></td><td><div class="summary">
            Returns a fixed time zone with the given offset. This may or may not be cached;
            callers should not rely upon any particular caching policy.
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_GetOffsetFromUtc.htm">GetOffsetFromUtc(Instant)</a></td><td><div class="summary">
            Returns the offset from UTC, where a positive duration indicates that local time is
            later than UTC. In other words, local time = UTC + offset.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_DateTimeZone_GetSystemDefault.htm">GetSystemDefault<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Gets the system default time zone, as mapped by the underlying provider. If the time zone
            is not mapped by this provider, a <a href="http://msdn2.microsoft.com/en-us/library/bb504484" target="_blank">TimeZoneNotFoundException</a> is thrown.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_DateTimeZone_GetSystemDefaultOrNull.htm">GetSystemDefaultOrNull<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Gets the system default time zone, as mapped by the underlying provider. If the time zone
            is not mapped by this provider, a null reference is returned.
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_GetZoneInterval.htm">GetZoneInterval(Instant)</a></td><td><div class="summary">
            Gets the zone interval for the given instant; the range of time around the instant in which the same Offset
            applies.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_DateTimeZone_Id.htm">Id</a></td><td><div class="summary">
            The ID for the time zone.
            </div><br /></td></tr><tr data="property; public; static; declared"><td><img src="../icons/pubproperty.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="P_NodaTime_DateTimeZone_Ids.htm">Ids</a></td><td><div class="summary">
            Gets the complete list of valid time zone ids provided by the current provider.
            This list is sorted in lexigraphical order.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_MapLocal.htm">MapLocal(LocalDateTime)</a></td><td><div class="summary">
            Returns complete information about how the given <a href="T_NodaTime_LocalDateTime.htm">LocalDateTime</a> is mapped in this time zone.
            </div><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_DateTimeZone_MaxOffset.htm">MaxOffset</a></td><td><div class="summary">
            Returns the greatest (most positive) offset within this time zone, over all time.
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_NodaTime_DateTimeZone_MinOffset.htm">MinOffset</a></td><td><div class="summary">
            Returns the least (most negative) offset within this time zone, over all time.
            </div><br /></td></tr><tr data="property; public; static; declared"><td><img src="../icons/pubproperty.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="P_NodaTime_DateTimeZone_ProviderVersionId.htm">ProviderVersionId</a></td><td><div class="summary">
            Returns a version identifier for the current time zone provider.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_ResolveLocal.htm">ResolveLocal(LocalDateTime, ZoneLocalMappingResolver)</a></td><td><div class="summary">
            Maps the given <a href="T_NodaTime_LocalDateTime.htm">LocalDateTime</a> to the corresponding <a href="T_NodaTime_ZonedDateTime.htm">ZonedDateTime</a>, following
            the given <a href="T_NodaTime_TimeZones_ZoneLocalMappingResolver.htm">ZoneLocalMappingResolver</a> to handle ambiguity and skipped times.
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_NodaTime_DateTimeZone_SetProvider.htm">SetProvider(IDateTimeZoneProvider)</a></td><td><div class="summary">
            Sets the provider to use for time zone lookup. Note that this is a global change; it is expected
            that users will only call this on start-up if at all.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_NodaTime_DateTimeZone_ToString.htm">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></td><td><div class="summary">
            Returns the ID of this time zone.
            </div> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.<a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>.)<br /></td></tr><tr data="property; public; static; declared"><td><img src="../icons/pubproperty.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="P_NodaTime_DateTimeZone_Utc.htm">Utc</a></td><td><div class="summary">
            Gets the UTC (Coordinated Universal Time) time zone. This is a single instance which is not
            provider-specific; it is guaranteed to have the ID "UTC", but may or may not be the same as the value
            returned by <span class="code">DateTimeZone.ForId("UTC")</span>; that depends on whether the current provider has its own
            mapping for that ID.
            </div><br /></td></tr></table></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Remarks</div><div class="sectionContent"><p>
            The mapping is unambiguous in the "UTC to local" direction, but
            the reverse is not true: when the offset changes, usually due to a Daylight Saving transition,
            the change either creates a gap (a period of local time which never occurs in the time zone)
            or an ambiguity (a period of local time which occurs twice in the time zone). Mapping back from
            local time to an instant requires consideration of how these problematic times will be handled.
            </p><p>
            Noda Time provides various options when mapping local time to a specific instant:
            <ul><li><a href="M_NodaTime_DateTimeZone_AtStrictly.htm">AtStrictly(LocalDateTime)</a> will throw an exception if the mapping from local time is either ambiguous
                or impossible, i.e. if there is anything other than one instant which maps to the given local time.</li><li><a href="M_NodaTime_DateTimeZone_AtLeniently.htm">AtLeniently(LocalDateTime)</a> will never throw an exception due to ambiguous or skipped times,
                resolving to the later option of ambiguous matches or the start of the zone interval after the gap for
                skipped times.</li><li><a href="M_NodaTime_DateTimeZone_ResolveLocal.htm">ResolveLocal(LocalDateTime, ZoneLocalMappingResolver)</a> will apply a <a href="T_NodaTime_TimeZones_ZoneLocalMappingResolver.htm">ZoneLocalMappingResolver</a> to the result of
                a mapping.</li><li><a href="M_NodaTime_DateTimeZone_MapLocal.htm">MapLocal(LocalDateTime)</a> will return a <a href="T_NodaTime_TimeZones_ZoneLocalMapping.htm">ZoneLocalMapping</a>
                with complete information about whether the given local time occurs zero times, once or twice. This is the most
                fine-grained approach, which is the fiddliest to use but puts the caller in the most control.</li></ul></p><p>
            Noda Time has two sources of time zone data available: a built-in copy of the
            <a href="http://www.iana.org/time-zones" target="_blank">"zoneinfo"</a> (aka tz or Olson) database, and the ability to convert .NET's own
            <a href="http://msdn2.microsoft.com/en-us/library/bb396389" target="_blank">TimeZoneInfo</a>  format into a "native" Noda Time zone. Which of these is most appropriate for you to use
            will very much depend on your exact needs. The zoneinfo database is widely used outside Windows, and has more historical data
            than the Windows-provided information, but if you need to interoperate with other Windows systems by specifying time zone IDs,
            you may wish to stick to the Windows time zones.
            </p><p>The static <a href="M_NodaTime_DateTimeZone_ForId.htm">ForId(String)</a> method will fetch a time zone with the given ID; the set of valid IDs is dependent on the
            current time zone provider, which can be replaced with the <a href="M_NodaTime_DateTimeZone_SetProvider.htm">SetProvider(IDateTimeZoneProvider)</a> method. The default provider is
            a <a href="T_NodaTime_TimeZones_TzdbTimeZoneProvider.htm">TzdbTimeZoneProvider</a> which loads its data from inside the Noda Time assembly; it can be replaced either with another
            TzdbTimeZoneProvider instance which may obtain data from external resources (e.g. to use a more recent version of the zoneinfo database
            than the version of Noda Time you're using) or an instance of <a href="T_NodaTime_TimeZones_BclTimeZoneProvider.htm">BclTimeZoneProvider</a>.
            </p><p>Unlike many other date/time APIs, Noda Time does not use the system default time zone without you explicitly asking it to.
            You can fetch the Noda Time representation of the system default time zone using <a href="M_NodaTime_DateTimeZone_GetSystemDefault.htm">GetSystemDefault<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> or
            <a href="M_NodaTime_DateTimeZone_GetSystemDefaultOrNull.htm">GetSystemDefaultOrNull<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>, which will attempt to find an appropriate time zone using the current provider.
            You should be aware that this may fail, however (in which case the first method will throw an exception, and the second method will return null)
            if no mapping is found. This could occur due to the system having a "custom" time zone installed, or there being no mapping for the BCL zone ID
            to the provider's set of IDs due to the BCL zone ID being added recently. You can always use <a href="M_NodaTime_TimeZones_BclTimeZone_ForSystemDefault.htm">ForSystemDefault<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> to convert
            the local <a href="http://msdn2.microsoft.com/en-us/library/bb396389" target="_blank">TimeZoneInfo</a> to guarantee that a representation is available.</p><p>Currently Noda Time does not support 3rd party time zone implementations. If you wish to create your own implementation,
            please ask for support on the Noda Time mailing list.</p></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="3"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td colspan="2"><span class="selflink">DateTimeZone</span></td></tr><tr><td> </td><td><img src="../icons/NotLastChild.gif" /></td><td><a href="T_NodaTime_Testing_TimeZones_SingleTransitionZone.htm">SingleTransitionZone</a></td></tr><tr><td> </td><td><img src="../icons/LastChild.gif" /></td><td><a href="T_NodaTime_TimeZones_BclTimeZone.htm">BclTimeZone</a></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:noda-time%40googlegroups.com?Subject=Noda-Time">Noda-Time Google Groups</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Copyright 2001-2009 Stephen Colebourne, 2009-2011 Jon Skeet, All rights reserved.</a></div>Assembly: <span sdata="assembly">NodaTime</span> (Module: NodaTime) Version: 1.0.0.0 (1.0.0.0)</p></div></body></html>